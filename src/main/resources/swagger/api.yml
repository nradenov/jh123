openapi: 3.0.3
info:
  title: Recipe Store - OpenAPI 3.0
  description: |-
    This is sample recipe store that allows you to store, update and query reipes.
    Recipe is defined as data contained holding title, ingredients list as space
    separated list, catraories, also as space sepaated list, number of servings supported and instructions for preparation.
    Recipe query is ieither by recipe ID, or using elastic search query, foe example:
    (category:((vegan OR meat) AND NOT desert) AND (ingredients:(flower AND NOT milk)) and (servings:5)
    should return recipe(s), if such exist, that are matching specified logical conditions in recipe fields.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.0.11
servers:
  - url: http://localhost/api
paths:
  /_search/recipes:
    get:
      summary: elastic search query for recipes
      operationId: searchRecipes
      parameters:
        - name: query
          in: query
          description: Recipe query as per ES specification
          required: true
          explode: true
          schema:
            type: string
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RecipeDTO'
  /recipes:
    get:
      summary: database query for recipes
      operationId: getAllRecipes
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RecipeDTO'
    post:
      summary: database query to add new recipe
      operationId: createRecipe
      requestBody:
        description: recipe to be created
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RecipeDTO'
      responses:
        '201':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RecipeDTO'
        '400':
          description: Bad request - id exists
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'

  /recipes/{id}:
    get:
      summary: database query for single recipe per recipe id, or empty body if nothing found
      operationId: getRecipe
      parameters:
        - name: id
          in: path
          description: Recipe ID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RecipeDTO'
    delete:
      summary: database query to delete recipe per recipe id, or empty body if nothing found
      operationId: deleteRecipe
      parameters:
        - name: id
          in: path
          description: Recipe ID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful operation
    put:
      summary: database query to update existing recipe
      operationId: updateRecipe
      parameters:
        - name: id
          in: path
          description: Recipe ID
          required: true
          schema:
            type: number
      requestBody:
        description: recipe to be created
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RecipeDTO'
      responses:
        '201':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RecipeDTO'
        '400':
          description: Bad request - not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
components:
  schemas:
    BadRequest:
      type: object
      properties:
        description:
          type: string
        entityType:
          type: string
        code:
          type: string
    RecipeDTO:
      type: object
      properties:
        id:
          type: number
        title:
          type: string
        ingredients:
          type: string
          example: "100 grams of butter, pinch of salt"
        instructions:
          type: string
          example: "melt down butter on low fire and add salt"
        category:
          type: string
          example: "dairy, cholesterol"


